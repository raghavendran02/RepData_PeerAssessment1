p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
library(nlme)
xyplot(weight ~ Time | Diet, BodyWeight)
p
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
?trellis.par.set
?print.trellis
swirl()
library(swirl)
swir()
swirl()
install.packages("kernlab")
library(kernlab)
data(spam)
?data
str(spam)
spam$type
library(knirt)
library(knitr)
install.packages("knitr")
sum_daywise_activity<- summarize(daywise_activity, total_steps = sum(date,na.rm = TRUE))
daywise_activity<- group_by(activity,date)
library("dplyr")
daywise_activity<- group_by(activity,date)
activity
activity<- read.table("activity.csv",, sep = ",", stringsAsFactors = FALSE, header =  TRUE)
setwd("~/Official/Coursera/Data Science Course/5.Reproducible Research/Project/Week-2")
activity<- read.table("activity.csv",, sep = ",", stringsAsFactors = FALSE, header =  TRUE)
daywise_activity<- group_by(activity,date)
daywise_activity
summarise(daywise_activity,sum
)
summarise(daywise_activity, total_steps = sum(date,na.rm = TRUE))
summarise(daywise_activity, total_steps = mean(date,na.rm = TRUE))
summarise(daywise_activity)
summarise(daywise_activity, mean)
summarise(daywise_activity, mean())
summarise(daywise_activity, mean(daywise_activity$date))
?aggregate
aggregate(activity$steps, by = list(activity$date), FUN = sum)
?colnames
aggr<-aggregate(activity$steps, by = list(activity$date), FUN = sum)
colnames(aggr)<-c("Date","sum")
aggr
aggr<-aggregate(activity$steps, by = list(activity$date), FUN = sum, na.action = TRUE)
aggr
aggr<-aggregate(activity$steps, by = list(activity$date), FUN = sum, na.action = ignore)
aggr<-aggregate(activity$steps, by = list(activity$date), FUN = sum, na.rm  = TRUE)
aggr
hist(aggr)
hist(aggr$sum)
hist(aggr$x)
barplot(aggr$x)
hist(aggr$x)
aggr<-aggregate(activity$steps, by = list(activity$date), FUN = c(sum,mean,median), na.rm  = TRUE)
aggr<-aggregate(activity$steps, by = list(activity$date), FUN = mean, na.rm  = TRUE)
aggr
aggr<-aggregate(activity$steps, by = list(activity$date), FUN = sum,mean na.rm  = TRUE)
aggr1<-aggregate(activity$steps, by = list(activity$date), FUN = mean na.rm  = TRUE)
aggr1<-aggregate(activity$steps, by = list(activity$date), FUN = mean, na.rm  = TRUE)
aggr<-aggregate(activity$steps, by = list(activity$date), FUN = sum, na.rm  = TRUE)
merge(aggr1,aggr)
merge(aggr1,aggr,by = x)
aggr1
aggr
merge(aggr1,aggr,by = Group.1)
merge(aggr1,aggr,by = "Group.1")
aggr<-aggregate(activity$steps, by = list(activity$date), FUN = sum, na.rm  = TRUE)
colnames(aggr)<-c("Group","sum")
aggr1<-aggregate(activity$steps, by = list(activity$date), FUN = mean, na.rm  = TRUE)
colnames(aggr1)<-c("Group","mean")
activity$steps
activity[activity$date = "2012-11-30"]
activity[activity$date == "2012-11-30",]
mean(activity[activity$date == "2012-11-30",]$steps)
mean(activity[activity$date == "2012-11-30",]$steps,na.rm = TRUE)
mean(activity[activity$date == "2012-11-30",]$steps,na.rm = FALSE)
mean(activity[activity$date == "2012-11-30",]$steps,na.action = na.omit)
mean(activity[activity$date == "2012-11-30",]$steps,na.action = 0)
?merge
merge
base::merge
sum_daywise_activity<- aggregate(activity$steps, by = list(activity$date), FUN = sum, na.rm  = TRUE)
colnames(sum_daywise_activity)<- c("Date","Sum")
mean_daywise_activity<- aggregate(activity$steps, by = list(activity$date), FUN = mean, na.rm  = TRUE)
colnames(mean_daywise_activity)<- c("Date","Mean")
median_daywise_activity<- aggregate(activity$steps, by = list(activity$date), FUN = mean, na.rm  = TRUE)
colnames(median_daywise_activity)<- c("Date","Median")
daywise_activity <- merge(sum_daywise_activity,mean_daywise_activity,median_daywise_activity, by = "Date")
?merge
daywise_activity <- merge(sum_daywise_activity,mean_daywise_activity,median_daywise_activity)
daywise_activity <- merge(sum_daywise_activity,mean_daywise_activity,median_daywise_activity, by = names("Date")
)
daywise_activity <- merge(sum_daywise_activity,mean_daywise_activity, by = "Date")
daywise_activity <- merge(merge(sum_daywise_activity,mean_daywise_activity, by = "Date"),median_daywise_activity, by = "Date")
daywise_activity
hist(sum_daywise_activity, xlab = "total number of steps taken each day", title = "otal number of steps taken each day")
hist(sum_daywise_activity$Sum, xlab = "total number of steps taken each day", title = "otal number of steps taken each day")
hist(sum_daywise_activity$Sum, xlab = "total number of steps taken each day", lab = "otal number of steps taken each day")
?hist
hist(sum_daywise_activity$Sum, xlab = "total number of steps taken each day", labels =   "total number of steps taken each day")
hist(sum_daywise_activity$Sum, xlab = "total number of steps taken each day", labels =   "total number of steps taken each day")
hist(sum_daywise_activity$Sum, xlab = "total number of steps taken each day", main  =   "total number of steps taken each day")
aggregate(activity$steps, by = list(activity$date), FUN = sum, na.rm  = TRUE)
aggregate(steps ~ date, activity, sum, na.action = na.omit)
aggregate(activity$steps, by = list(activity$date), FUN = sum, na.omit = TRUE
)
aggregate(activity$steps, by = list(activity$date), FUN = sum, na.action = na.omit)
aggregate(steps~date, activity, FUN = sum, na.action = na.omit)
aggregate(activity$steps, by = list(activity$date), FUN = sum, na.action = na.omit)
aggregate(activity$steps, by = list(activity$date), FUN = sum)
?aggregate
aggregate(steps~interval, activity, FUN = mean, na.action = na.omit)
with(mean_daywise_activity,plot(interval, steps))
mean_daywise_activity<- aggregate(steps~interval, activity, FUN = mean, na.action = na.omit)
with(mean_daywise_activity,plot(interval, steps))
with(mean_daywise_activity,plot(interval, steps), type = "l")
with(mean_daywise_activity,plot(interval, steps), type = "l")
with(mean_daywise_activity,plot(interval, steps, type = "l"))
activity$steps
max(activity$steps, na.rm = TRUE)
which(max(activity$steps, na.rm = TRUE))
?which
which(activity$steps == max(activity$steps, na.rm = TRUE))
activity[which(activity$steps == max(activity$steps, na.rm = TRUE)),3]
max(mean_daywise_activity$steps, na.rm = TRUE)
View(mean_daywise_activity)
which(mean_daywise_activity$steps == max(mean_daywise_activity$steps, na.rm = TRUE))
mean_daywise_activity[which(mean_daywise_activity$steps == max(mean_daywise_activity$steps, na.rm = TRUE)),2]
sum_daywise_activity<- aggregate(steps~date, activity, FUN = sum,
na.action  = na.omit)
sum_daywise_activity
mean_daywise_activity<- aggregate(steps~date, activity, FUN = mean,
na.action  = na.omit)
median_daywise_activity<- aggregate(steps~date, activity, FUN = median,
na.action  = na.omit)
daywise_activity <- merge(median_daywise_activity,mean_daywise_activity, by = "date")
daywise_activity
mean_daywise_activity<- aggregate(steps~interval, activity, FUN = mean, na.action = na.omit)
with(mean_daywise_activity,plot(interval, steps, type = "l", xlab = "Time series"))
mean_daywise_activity[which(mean_daywise_activity$steps == max(mean_daywise_activity$steps, na.rm = TRUE)),2]
weekdays(activity$date)
weekdays(as.date(activity$date))
complete.cases(activity)
?complete.cases
count(complete.cases(activity)==FALSE)
complete.cases(activity)==FALSE
count(complete.cases(activity))
length(complete.cases(activity))
length(complete.cases(activity)==FALSE)
length(complete.cases(activity)==TRUE)
sum(is.na(activity))
sum(is.na(activity$steps))
length(complete.cases(activity)==FALSE)
length(complete.cases(activity))
length(complete.cases(activity)[5])
length(complete.cases(activity)[complete.cases(activity)==FALSE])
NA_activity<-complete.cases(activity)
lenght(NA_activity[NA_activity == FALSE])
length(NA_activity[NA_activity == FALSE])
is.na(activity$steps)
sum(is.na(activity$steps))
sum(is.na(activity$steps)==TRUE)
na_activity<-is.na(activity$steps)
sum(na_activity==TRUE)
activity[na_activity == TRUE,]
unique(activity[na_activity == TRUE,]$date
)
i<-1
mean_daywise_activity[date==na_date[i])
mean_daywise_activity[date==na_date[i]]
na_date<-sunique(activity[na_activity == TRUE,]$date)
na_date<-unique(activity[na_activity == TRUE,]$date)
mean_daywise_activity[date==na_date[i])
mean_daywise_activity[date==na_date[i]]
mean_daywise_activity[date==na_date[i],2]
class(na_date)
na_date
na_date<-as.list(unique(activity[na_activity == TRUE,]$date))
na_date
na_date$1
na_date[1]
na_date[2]
mean_daywise_activity[date==na_date[i],2]
mean_daywise_activity[mean_daywise_activity$date==na_date[i],2]
na_date[1]
na_date<-unique(activity[na_activity == TRUE,]$date)
mean_daywise_activity[mean_daywise_activity$date==na_date[i],2]
mean_daywise_activity$date==na_date[i]
na_date[1]
mean_daywise_activity
mean_daywise_activity$interval
mean_daywise_activity<- aggregate(steps~date, activity, FUN = mean,
na.action  = na.omit)
mean_daywise_activity[mean_daywise_activity$date==na_date[i],2]
mean_daywise_activity$date
mean_daywise_activity$date==na_date[i]
na_date[1]
mean_daywise_activity<- aggregate(steps~date, activity, FUN = mean)
mean_daywise_activity<- aggregate(steps~date, activity, FUN = mean)
i
mean_daywise_activity[mean_daywise_activity$date==na_date[i],2]
mean_daywise_activity<- aggregate(steps~date, activity, FUN = mean)
mean_daywise_activity[mean_daywise_activity$date==na_date[i],2]
mean_daywise_activity$date
mean_daywise_activity<- aggregate(steps~date, activity, FUN = mean)
mean_daywise_activity
mean_daywise_activity<- aggregate(steps~date, activity, FUN = mean, na.action = 0)
mean_daywise_activity<- aggregate(steps~date, activity, FUN = mean, na.action = na.pass)
mean_daywise_activity
weekdays(as.Date(activity$date))
activity_day<-weekdays(as.Date(activity$date))
activity$day<-weekdays(as.Date(activity$date))
activity[activity$day == "Sunday" || activity$day == "Saturday"]
activity[activity$day == "Sunday" || activity$day == "Saturday",]
activity$day == "Sunday"
activity$day == "Saturday"
activity[activity$day == "Sunday" | activity$day == "Saturday",]
activity[activity$day == "Sunday" || activity$day == "Saturday"]
activity[activity$day == "Sunday" | activity$day == "Saturday"]
activity[activity$day == "Sunday" | activity$day == "Saturday",]
which(activity[activity$day == "Sunday" | activity$day == "Saturday",])
which(activity$day == "Sunday" | activity$day == "Saturday",)
activity$daytype<-activity[which(activity$day == "Sunday" | activity$day == "Saturday",)]
mutate(which(activity$day == "Sunday" | activity$day == "Saturday",), daytype = "Weekend")
activity[activity$day == "Sunday" | activity$day == "Saturday",]
weekend<-activity[activity$day == "Sunday" | activity$day == "Saturday",]
mutate(weekend, daytype = "weeked")
mutate(weekend, daytype = "weekend")
weekday<-activity[!(activity$day == "Sunday" | activity$day == "Saturday"),]
mutate(weekday, daytype = "weekday")
rbind(weekend, weekday)
activity<-rbind(weekend, weekday)
colnames(activity)
colclass(activity)
weekday
mutate(weekday, daytype = "weekday")
colnames(mutate(weekday, daytype = "weekday"))
weekday
colnames(weekday)
colnames(mutate(weekday, daytype = "weekday"))
activity<-daytype<-mutate(weekday, daytype = "weekday")
colnames(activity)
activity<-daytype<-mutate(weekend, daytype = "weekend")
activity$daytype<-mutate(weekday, daytype = "weekday")
rbind(mutate(weekend, daytype = "weekend"),mutate(weekday, daytype = "weekday"))
activity<-rbind(mutate(weekend, daytype = "weekend"),mutate(weekday, daytype = "weekday"))
View(activity)
weekday(activity$date) %in% c("Sunday","Saturday"
)
weekdays(activity$date) %in% c("Sunday","Saturday")
if(weekdays(as.date(activity$date) %in% c("Sunday","Saturday"))
day<- "weekday"
else
day <- "weekend"
if(weekdays(as.date(activity$date) %in% c("Sunday","Saturday"))
day<-"weekday"
else
day <-"weekend"
if(weekdays(as.date(activity$date) %in% c("Sunday","Saturday")){
day<-"weekday"
}
else
{
day <-"weekend"
}
if(weekdays(as.date(activity$date)) %in% c("Sunday","Saturday")){
day<-"weekday"
}
else
{
day <-"weekend"
}
if(weekdays(as.Date(activity$date)) %in% c("Sunday","Saturday")){
day<-"weekday"
}
else
{
day <-"weekend"
}
weekend<-function(day){
if(weekdays(as.Date(activity$date)) %in% c("Sunday","Saturday")){
day<-"weekday"
}
else
{
day <-"weekend"
}
}
week(activity$day)
weekend(activity$day)
weekend(activity$date[1])
activity$date
activity$date[1]
weekend(activity$date[1])
weekend
weekend<-function(day){
if(weekdays(as.Date(day)) %in% c("Sunday","Saturday")){
day<-"weekday"
}
else
{
day <-"weekend"
}
}
weekend(activity$date[1])
daytype<-function(day){
if(weekdays(as.Date(day)) %in% c("Sunday","Saturday")){
day<-"weekday"
}
else
{
day <-"weekend"
}
}
daytype(activity$date[1])
dt<-daytype(activity$date[1])
dt
dt<-daytype(activity$date[100])
dt
dt<-daytype(activity$date[200])
dt
dt<-daytype(activity$date[201])
dt<-daytype(activity$date[268])
dt
dt<-daytype(activity$date[1])
dt
check_daytype<-function(day){
if(weekdays(as.Date(day)) %in% c("Sunday","Saturday")){
day<-"weekend"
}
else
{
day <-"weekday"
}
}
check_daytype(actiity$date[1])
check_daytype(activity$date[1])
dt<-check_daytype(activity$date[1])
dt
weekdays(as.date(activity$date[1]))
weekdays(as.Date(activity$date[1]))
weekdays(as.Date(activity$date[4806]))
dt<-check_daytype(activity$date[4806])
dt
nrows(activity)
?sapply
sapply(activity$date,check_daytype)
daytype<-sapply(activity$date,check_daytype)
View(daytype)
daytype<-tapply(activity$date,check_daytype)
daytype<-sapply(activity$date,check_daytype)
daytype
head(daytype)
daytype<-lapply(activity$date,check_daytype)
head(daytype)
daytype<-data.frame(sapply(activity$date,check_daytype))
day_type
daytype
head(daytype)
class(activity)
activity<- read.table("activity.csv", sep = ",", stringsAsFactors = FALSE ,
header =TRUE)
check_daytype<-function(day){
if(weekdays(as.Date(day)) %in% c("Sunday","Saturday")){
day<-"weekend"
}
else
{
day <-"weekday"
}
}
daytype<-data.frame(sapply(activity$date,check_daytype))
activity_new<-cbind(activity,daytype)
View(activity_new)
colnames(activity_new) <- c("steps","date","interval","daytype")
class(activity_new$daytype)
library("ggplot")
install.packages(ggplot)
ls()
install.packages(ggplot)
library("ggplot2")
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
ggplot
library(ggplot2)
mean_daywise_activity<- aggregate(steps~interval, activity, FUN = mean, na.action = na.omit)
g<-ggplot(mean_daywise_activity, aes(steps,interval))
g+geom_point()
mean_daywise_activity<- aggregate(steps~interval, activity, FUN = mean, na.action = na.omit)
head(mean_daywise_activity)
mean_daywise_activity<- aggregate(steps~interval, activity_new[activity_new$daytype == weekday,], FUN = mean, na.action = na.omit)
mean_daywise_activity<- aggregate(steps~interval, activity_new[activity_new$daytype == "weekday",], FUN = mean, na.action = na.omit)
mean_daywise_activity
mean_daywise_activity_weekday<- aggregate(steps~interval, activity_new[activity_new$daytype == "weekday",], FUN = mean, na.action = na.omit)
mean_daywise_activity_weekend<- aggregate(steps~interval, activity_new[activity_new$daytype == "weekend",], FUN = mean, na.action = na.omit)
par(mfrow=c(1,2))
?names
mean_daywise_activity_weekday
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l", xlab = "Time series"))
with(mean_daywise_activity_weekend,plot(interval, steps, type = "l", xlab = "Time series"))
names(activity)
mean_daywise_activity_weekday<- aggregate(steps~interval, activity_new[activity_new$daytype == "weekday",], FUN = mean, na.action = na.omit)
mean_daywise_activity_weekend<- aggregate(steps~interval, activity_new[activity_new$daytype == "weekend",], FUN = mean, na.action = na.omit)
par(mfrow = c(1,2))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays",
xlab = "5 minute interval",
ylab = "Average number of steps"))
with(mean_daywise_activity_weekend,plot(interval, steps, type = "l",     main = "Activity on weekends",
xlab = "5 minute interval",
ylab = "Average number of steps"))
ylab = "Average number of steps"))
max(mean_daywise_activity_weekday)
max(mean_daywise_activity_weekend)
max(mean_daywise_activity_weekday$interval)
max(mean_daywise_activity_weekend$interval)
par(mfrow = c(1,2))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps", xlim = c(0,500,100,1500,2000,2500)))
with(mean_daywise_activity_weekend,plot(interval, steps, type = "l",  main = "Activity on weekends", xlab = "5 minute interval", ylab = "Average number of steps",c(0,500,100,1500,2000,2500)))
par(mfrow = c(1,2))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps", xlim = c(0,500,100,1500,2000,2500)))
with(mean_daywise_activity_weekend,plot(interval, steps, type = "l",  main = "Activity on weekends", xlab = "5 minute interval", ylab = "Average number of steps",xlim = c(0,500,100,1500,2000,2500)))
?xlim
?plot
par(mfrow = c(1,2))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps", xlim = c(0,500,100,1500,2000,2500)))
par(mfrow = c(1,2))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps",
)
)
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps", xlim = c(0,500,100,1500,2000,2500)))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps", xlim = c(0,500,100,1500,2000)))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps", xlim = range(0,500,100,1500,2000)))
par(mfrow = c(1,2))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps", xlim = range(0,500,100,1500,2000)))
par(mfrow = c(1,2))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps", xlim = range(0,2500)))
?names
par(mfrow = c(1,2))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps", xlim = c(2500,500)))
par(mfrow = c(1,2))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps", xlim = c(500,2500)))
par(mfrow = c(1,2))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps", xlim = c(500,1000,2500)))
par(mfrow = c(1,2))
with(mean_daywise_activity_weekday,plot(interval, steps, type = "l",main = "Activity on weekdays", xlab = "5 minute interval", ylab = "Average number of steps", xlim = c(500,2500)))
with(mean_daywise_activity_weekend,plot(interval, steps, type = "l",  main = "Activity on weekends", xlab = "5 minute interval", ylab = "Average number of steps",xlim = c(500,2500)))
?screen
?png
```{r echo = TRUE, fig.width = 10, fig.height=4}
```{r ,comparative_plots, echo = TRUE, fig.width=20,fig.height=4}
mean_daywise_activity[which(mean_daywise_activity$steps == max(mean_daywise_activity$steps, na.rm = TRUE)),2]
mean_daywise_activity[which(mean_daywise_activity$steps == max(mean_daywise_activity$steps, na.rm = TRUE)),]
mean(sum_daywise_activity$steps)
median(sum_daywise_activity$steps)
mean_daywise_activity<- aggregate(steps~interval, activity, FUN = mean, na.action = na.omit)
with(mean_daywise_activity,plot(interval, steps, type = "l", xlab = "Time series"))
mean_daywise_activity[which(mean_daywise_activity$steps == max(mean_daywise_activity$steps, na.rm = TRUE)),2]
mean_daywise_activity[which(mean_daywise_activity$steps == max(mean_daywise_activity$steps, na.rm = TRUE)),]
with(mean_daywise_activity,plot(interval, steps, type = "l", xlab = "5 minute interval", ylab = "average number of steps", main = " time series plot of the 5-minute interval", xlim = c(100,2000)))
with(mean_daywise_activity,plot(interval, steps, type = "l", xlab = "5 minute interval", ylab = "average number of steps", main = " time series plot of the 5-minute interval", xlim = c(100,2500)))
with(mean_daywise_activity,plot(interval, steps, type = "l", xlab = "5 minute interval", ylab = "average number of steps", main = " time series plot of the 5-minute interval", xlim = c(0,2500)))
na_activity<-is.na(activity$steps)
sum(na_activity==TRUE)
steps_data <- data.frame(activity$steps)
steps_data[is.na(steps_data),] <- ceiling(tapply(activity_data$steps, activity_data$interval, mean, na.rm=TRUE))
filled_activity_data <- cbind(steps_data, activity_data[,2:3])
steps_data <- data.frame(activity$steps)
steps_data[is.na(steps_data),] <- ceiling(tapply(activity$steps, activity_data$interval, mean, na.rm=TRUE))
filled_activity <- cbind(steps_data, activity[,2:3])
steps_data <- data.frame(activity$steps)
steps_data[is.na(steps_data),] <- ceiling(tapply(activity$steps, activity_data$interval, mean, na.rm=TRUE))
filled_activity <- cbind(steps_data, activity[,2:3])
filled_steps_by_date <- aggregate(activity.steps ~ date, filled_activity, sum)
hist(filled_steps_by_date$activity.steps,
main="Histogram of steps taken per day",
xlab="Steps interval",
col="darkolivegreen1"
)
mean(filled_steps_by_date$activity_data.steps)
median(filled_steps_by_date$activity_data.steps)
filled_steps_by_date <- aggregate(activity.steps ~ date, filled_activity, sum)
mean(filled_steps_by_date$activity.steps)
median(filled_steps_by_date$activity.steps)
filled_steps_by_date <- aggregate(steps ~ date, filled_activity, sum)
colnames(filled_activity)
filled_steps_by_date <- aggregate(activity.steps ~ date, filled_activity, sum)
mean(filled_steps_by_date$activity_data.steps)
mean(filled_steps_by_date$activity.steps)
steps_data <- data.frame(activity$steps)
steps_data[is.na(steps_data),] <- ceiling(tapply(activity$steps, activity$interval, mean, na.rm=TRUE))
filled_activity <- cbind(steps_data, activity[,2:3])
filled_steps_by_date <- aggregate(activity.steps ~ date, filled_activity, sum)
hist(filled_steps_by_date$activity.steps,
main="Histogram of steps taken per day",
xlab="Steps interval",
col="darkolivegreen1"
)
mean(filled_steps_by_date$activity.steps)
median(filled_steps_by_date$activity.steps)
